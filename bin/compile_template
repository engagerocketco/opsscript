require_relative "../lib/pivotal_changelog"
require "pry"
require "ffaker"

class DummyStory
  def initialize
    @name = FFaker::Lorem.sentence
    @description = FFaker::Lorem.paragraph
    @estimate = FFaker::Random.rand(8)
    @url = FFaker::Internet.http_url
  end

  attr_accessor :name, :description, :estimate, :url
end

class DummyBinding
  def initialize
    @projects = [
      {
        name: "EngageRocket",
        items: {
          "feature" => [
            DummyStory.new,
            DummyStory.new,
            DummyStory.new,
          ],

          "bug" => [
            DummyStory.new,
            DummyStory.new,
          ],

          "chore" => [
            DummyStory.new,
            DummyStory.new,
            DummyStory.new,
            DummyStory.new,
            DummyStory.new,
          ]
        }
      },
      {
        name: "360",
        items: {
          "feature" => [
            DummyStory.new,
            DummyStory.new,
          ],

          "bug" => [],

          "chore" => []
        }
      }
    ]

    @subject = FFaker::Lorem.sentence
  end

  def get_binding
    binding
  end
end

def compile!(output = :file)
  template = Template.new
  binding_obj = DummyBinding.new
  result = template.render(binding_obj.get_binding)

  case output
  when :file
    f = Tempfile.open(["pivotal_changelog", ".html"]) { |f| f << result }
    puts f.path
    system("xdg-open", f.path)
  when :stdout
    puts result
  end
end

binding.irb
